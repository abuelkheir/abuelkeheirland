In archive libLCD_Driver.a:

LCDMainTrial.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000300  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000006af  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text.main    00000012  00000000  00000000  000009e3  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text.main:

00000000 <main>:
#include "../../Day 11/Lab/DIO_int.h"
#include "avr/delay.h"
#include "LCD_int.h"


int main(){
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
	return 0;
   8:	80 e0       	ldi	r24, 0x00	; 0
   a:	90 e0       	ldi	r25, 0x00	; 0
}
   c:	cf 91       	pop	r28
   e:	df 91       	pop	r29
  10:	08 95       	ret

LCD_Pro.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000008d0  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00000fb1  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text.LCD_vidWriteData 0000015c  00000000  00000000  000018b5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.LCD_vidSendCommand 0000015c  00000000  00000000  00001a11  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.LCD_vidWriteString 00000018  00000000  00000000  00001b6d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.LCD_vidInit 00000412  00000000  00000000  00001b85  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.LCD_vidGoTo 00000022  00000000  00000000  00001f97  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.LCD_vidWriteData:

00000000 <LCD_vidWriteData>:




void LCD_vidWriteData(u8 DataCpy)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	60 97       	sbiw	r28, 0x10	; 16
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	98 8b       	std	Y+16, r25	; 0x10
  16:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_0,DIOHIGH);
  18:	83 e0       	ldi	r24, 0x03	; 3
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	60 e0       	ldi	r22, 0x00	; 0
  1e:	70 e0       	ldi	r23, 0x00	; 0
  20:	41 e0       	ldi	r20, 0x01	; 1
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_1,DIOLOW);
  28:	83 e0       	ldi	r24, 0x03	; 3
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	61 e0       	ldi	r22, 0x01	; 1
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	40 e0       	ldi	r20, 0x00	; 0
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
	DIO_vidSetPortValue(PORTD,DataCpy);
  38:	2f 85       	ldd	r18, Y+15	; 0x0f
  3a:	38 89       	ldd	r19, Y+16	; 0x10
  3c:	84 e0       	ldi	r24, 0x04	; 4
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	b9 01       	movw	r22, r18
  42:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
	DIO_vidSetPinVal(PORTC,DIO_u8PIN_2,DIOHIGH);
  46:	83 e0       	ldi	r24, 0x03	; 3
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	62 e0       	ldi	r22, 0x02	; 2
  4c:	70 e0       	ldi	r23, 0x00	; 0
  4e:	41 e0       	ldi	r20, 0x01	; 1
  50:	50 e0       	ldi	r21, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  56:	8a e0       	ldi	r24, 0x0A	; 10
  58:	97 ed       	ldi	r25, 0xD7	; 215
  5a:	a3 ec       	ldi	r26, 0xC3	; 195
  5c:	bf e3       	ldi	r27, 0x3F	; 63
  5e:	8b 87       	std	Y+11, r24	; 0x0b
  60:	9c 87       	std	Y+12, r25	; 0x0c
  62:	ad 87       	std	Y+13, r26	; 0x0d
  64:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  66:	6b 85       	ldd	r22, Y+11	; 0x0b
  68:	7c 85       	ldd	r23, Y+12	; 0x0c
  6a:	8d 85       	ldd	r24, Y+13	; 0x0d
  6c:	9e 85       	ldd	r25, Y+14	; 0x0e
  6e:	20 e0       	ldi	r18, 0x00	; 0
  70:	30 e0       	ldi	r19, 0x00	; 0
  72:	4a ef       	ldi	r20, 0xFA	; 250
  74:	54 e4       	ldi	r21, 0x44	; 68
  76:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  7a:	dc 01       	movw	r26, r24
  7c:	cb 01       	movw	r24, r22
  7e:	8f 83       	std	Y+7, r24	; 0x07
  80:	98 87       	std	Y+8, r25	; 0x08
  82:	a9 87       	std	Y+9, r26	; 0x09
  84:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
  86:	6f 81       	ldd	r22, Y+7	; 0x07
  88:	78 85       	ldd	r23, Y+8	; 0x08
  8a:	89 85       	ldd	r24, Y+9	; 0x09
  8c:	9a 85       	ldd	r25, Y+10	; 0x0a
  8e:	20 e0       	ldi	r18, 0x00	; 0
  90:	30 e0       	ldi	r19, 0x00	; 0
  92:	40 e8       	ldi	r20, 0x80	; 128
  94:	5f e3       	ldi	r21, 0x3F	; 63
  96:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  9a:	88 23       	and	r24, r24
  9c:	04 f4       	brge	.+0      	; 0x9e <LCD_vidWriteData+0x9e>
		__ticks = 1;
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	9e 83       	std	Y+6, r25	; 0x06
  a4:	8d 83       	std	Y+5, r24	; 0x05
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <LCD_vidWriteData+0xa8>
	else if (__tmp > 65535)
  a8:	6f 81       	ldd	r22, Y+7	; 0x07
  aa:	78 85       	ldd	r23, Y+8	; 0x08
  ac:	89 85       	ldd	r24, Y+9	; 0x09
  ae:	9a 85       	ldd	r25, Y+10	; 0x0a
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	3f ef       	ldi	r19, 0xFF	; 255
  b4:	4f e7       	ldi	r20, 0x7F	; 127
  b6:	57 e4       	ldi	r21, 0x47	; 71
  b8:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  bc:	18 16       	cp	r1, r24
  be:	04 f4       	brge	.+0      	; 0xc0 <LCD_vidWriteData+0xc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  c0:	6b 85       	ldd	r22, Y+11	; 0x0b
  c2:	7c 85       	ldd	r23, Y+12	; 0x0c
  c4:	8d 85       	ldd	r24, Y+13	; 0x0d
  c6:	9e 85       	ldd	r25, Y+14	; 0x0e
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e2       	ldi	r20, 0x20	; 32
  ce:	51 e4       	ldi	r21, 0x41	; 65
  d0:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  d4:	dc 01       	movw	r26, r24
  d6:	cb 01       	movw	r24, r22
  d8:	bc 01       	movw	r22, r24
  da:	cd 01       	movw	r24, r26
  dc:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
  e0:	dc 01       	movw	r26, r24
  e2:	cb 01       	movw	r24, r22
  e4:	9e 83       	std	Y+6, r25	; 0x06
  e6:	8d 83       	std	Y+5, r24	; 0x05
  e8:	00 c0       	rjmp	.+0      	; 0xea <LCD_vidWriteData+0xea>
  ea:	88 ec       	ldi	r24, 0xC8	; 200
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	9c 83       	std	Y+4, r25	; 0x04
  f0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	9c 81       	ldd	r25, Y+4	; 0x04
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	01 f4       	brne	.+0      	; 0xfa <LCD_vidWriteData+0xfa>
  fa:	9c 83       	std	Y+4, r25	; 0x04
  fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fe:	8d 81       	ldd	r24, Y+5	; 0x05
 100:	9e 81       	ldd	r25, Y+6	; 0x06
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	9e 83       	std	Y+6, r25	; 0x06
 106:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 108:	8d 81       	ldd	r24, Y+5	; 0x05
 10a:	9e 81       	ldd	r25, Y+6	; 0x06
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	01 f4       	brne	.+0      	; 0x110 <LCD_vidWriteData+0x110>
 110:	00 c0       	rjmp	.+0      	; 0x112 <LCD_vidWriteData+0x112>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 112:	6f 81       	ldd	r22, Y+7	; 0x07
 114:	78 85       	ldd	r23, Y+8	; 0x08
 116:	89 85       	ldd	r24, Y+9	; 0x09
 118:	9a 85       	ldd	r25, Y+10	; 0x0a
 11a:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
 11e:	dc 01       	movw	r26, r24
 120:	cb 01       	movw	r24, r22
 122:	9e 83       	std	Y+6, r25	; 0x06
 124:	8d 83       	std	Y+5, r24	; 0x05
 126:	8d 81       	ldd	r24, Y+5	; 0x05
 128:	9e 81       	ldd	r25, Y+6	; 0x06
 12a:	9a 83       	std	Y+2, r25	; 0x02
 12c:	89 83       	std	Y+1, r24	; 0x01
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	01 f4       	brne	.+0      	; 0x136 <LCD_vidWriteData+0x136>
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1.53);
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_2,DIOLOW);
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	62 e0       	ldi	r22, 0x02	; 2
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	40 e0       	ldi	r20, 0x00	; 0
 144:	50 e0       	ldi	r21, 0x00	; 0
 146:	0e 94 00 00 	call	0	; 0x0 <LCD_vidWriteData>
}
 14a:	60 96       	adiw	r28, 0x10	; 16
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
 156:	cf 91       	pop	r28
 158:	df 91       	pop	r29
 15a:	08 95       	ret

Disassembly of section .text.LCD_vidSendCommand:

00000000 <LCD_vidSendCommand>:




void LCD_vidWriteData(u8 DataCpy)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	60 97       	sbiw	r28, 0x10	; 16
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	98 8b       	std	Y+16, r25	; 0x10
  16:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_0,DIOHIGH);
  18:	83 e0       	ldi	r24, 0x03	; 3
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	60 e0       	ldi	r22, 0x00	; 0
  1e:	70 e0       	ldi	r23, 0x00	; 0
  20:	40 e0       	ldi	r20, 0x00	; 0
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_1,DIOLOW);
  28:	83 e0       	ldi	r24, 0x03	; 3
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	61 e0       	ldi	r22, 0x01	; 1
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	40 e0       	ldi	r20, 0x00	; 0
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
	DIO_vidSetPortValue(PORTD,DataCpy);
  38:	2f 85       	ldd	r18, Y+15	; 0x0f
  3a:	38 89       	ldd	r19, Y+16	; 0x10
  3c:	84 e0       	ldi	r24, 0x04	; 4
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	b9 01       	movw	r22, r18
  42:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
	DIO_vidSetPinVal(PORTC,DIO_u8PIN_2,DIOHIGH);
  46:	83 e0       	ldi	r24, 0x03	; 3
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	62 e0       	ldi	r22, 0x02	; 2
  4c:	70 e0       	ldi	r23, 0x00	; 0
  4e:	41 e0       	ldi	r20, 0x01	; 1
  50:	50 e0       	ldi	r21, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  56:	8a e0       	ldi	r24, 0x0A	; 10
  58:	97 ed       	ldi	r25, 0xD7	; 215
  5a:	a3 ec       	ldi	r26, 0xC3	; 195
  5c:	bf e3       	ldi	r27, 0x3F	; 63
  5e:	8b 87       	std	Y+11, r24	; 0x0b
  60:	9c 87       	std	Y+12, r25	; 0x0c
  62:	ad 87       	std	Y+13, r26	; 0x0d
  64:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  66:	6b 85       	ldd	r22, Y+11	; 0x0b
  68:	7c 85       	ldd	r23, Y+12	; 0x0c
  6a:	8d 85       	ldd	r24, Y+13	; 0x0d
  6c:	9e 85       	ldd	r25, Y+14	; 0x0e
  6e:	20 e0       	ldi	r18, 0x00	; 0
  70:	30 e0       	ldi	r19, 0x00	; 0
  72:	4a ef       	ldi	r20, 0xFA	; 250
  74:	54 e4       	ldi	r21, 0x44	; 68
  76:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  7a:	dc 01       	movw	r26, r24
  7c:	cb 01       	movw	r24, r22
  7e:	8f 83       	std	Y+7, r24	; 0x07
  80:	98 87       	std	Y+8, r25	; 0x08
  82:	a9 87       	std	Y+9, r26	; 0x09
  84:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
  86:	6f 81       	ldd	r22, Y+7	; 0x07
  88:	78 85       	ldd	r23, Y+8	; 0x08
  8a:	89 85       	ldd	r24, Y+9	; 0x09
  8c:	9a 85       	ldd	r25, Y+10	; 0x0a
  8e:	20 e0       	ldi	r18, 0x00	; 0
  90:	30 e0       	ldi	r19, 0x00	; 0
  92:	40 e8       	ldi	r20, 0x80	; 128
  94:	5f e3       	ldi	r21, 0x3F	; 63
  96:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  9a:	88 23       	and	r24, r24
  9c:	04 f4       	brge	.+0      	; 0x9e <LCD_vidSendCommand+0x9e>
		__ticks = 1;
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	9e 83       	std	Y+6, r25	; 0x06
  a4:	8d 83       	std	Y+5, r24	; 0x05
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <LCD_vidSendCommand+0xa8>
	else if (__tmp > 65535)
  a8:	6f 81       	ldd	r22, Y+7	; 0x07
  aa:	78 85       	ldd	r23, Y+8	; 0x08
  ac:	89 85       	ldd	r24, Y+9	; 0x09
  ae:	9a 85       	ldd	r25, Y+10	; 0x0a
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	3f ef       	ldi	r19, 0xFF	; 255
  b4:	4f e7       	ldi	r20, 0x7F	; 127
  b6:	57 e4       	ldi	r21, 0x47	; 71
  b8:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  bc:	18 16       	cp	r1, r24
  be:	04 f4       	brge	.+0      	; 0xc0 <LCD_vidSendCommand+0xc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  c0:	6b 85       	ldd	r22, Y+11	; 0x0b
  c2:	7c 85       	ldd	r23, Y+12	; 0x0c
  c4:	8d 85       	ldd	r24, Y+13	; 0x0d
  c6:	9e 85       	ldd	r25, Y+14	; 0x0e
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e2       	ldi	r20, 0x20	; 32
  ce:	51 e4       	ldi	r21, 0x41	; 65
  d0:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  d4:	dc 01       	movw	r26, r24
  d6:	cb 01       	movw	r24, r22
  d8:	bc 01       	movw	r22, r24
  da:	cd 01       	movw	r24, r26
  dc:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
  e0:	dc 01       	movw	r26, r24
  e2:	cb 01       	movw	r24, r22
  e4:	9e 83       	std	Y+6, r25	; 0x06
  e6:	8d 83       	std	Y+5, r24	; 0x05
  e8:	00 c0       	rjmp	.+0      	; 0xea <LCD_vidSendCommand+0xea>
  ea:	88 ec       	ldi	r24, 0xC8	; 200
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	9c 83       	std	Y+4, r25	; 0x04
  f0:	8b 83       	std	Y+3, r24	; 0x03
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	9c 81       	ldd	r25, Y+4	; 0x04
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	01 f4       	brne	.+0      	; 0xfa <LCD_vidSendCommand+0xfa>
  fa:	9c 83       	std	Y+4, r25	; 0x04
  fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fe:	8d 81       	ldd	r24, Y+5	; 0x05
 100:	9e 81       	ldd	r25, Y+6	; 0x06
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	9e 83       	std	Y+6, r25	; 0x06
 106:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 108:	8d 81       	ldd	r24, Y+5	; 0x05
 10a:	9e 81       	ldd	r25, Y+6	; 0x06
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	01 f4       	brne	.+0      	; 0x110 <LCD_vidSendCommand+0x110>
 110:	00 c0       	rjmp	.+0      	; 0x112 <LCD_vidSendCommand+0x112>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 112:	6f 81       	ldd	r22, Y+7	; 0x07
 114:	78 85       	ldd	r23, Y+8	; 0x08
 116:	89 85       	ldd	r24, Y+9	; 0x09
 118:	9a 85       	ldd	r25, Y+10	; 0x0a
 11a:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
 11e:	dc 01       	movw	r26, r24
 120:	cb 01       	movw	r24, r22
 122:	9e 83       	std	Y+6, r25	; 0x06
 124:	8d 83       	std	Y+5, r24	; 0x05
 126:	8d 81       	ldd	r24, Y+5	; 0x05
 128:	9e 81       	ldd	r25, Y+6	; 0x06
 12a:	9a 83       	std	Y+2, r25	; 0x02
 12c:	89 83       	std	Y+1, r24	; 0x01
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	01 f4       	brne	.+0      	; 0x136 <LCD_vidSendCommand+0x136>
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1.53);
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_2,DIOLOW);
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	62 e0       	ldi	r22, 0x02	; 2
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	40 e0       	ldi	r20, 0x00	; 0
 144:	50 e0       	ldi	r21, 0x00	; 0
 146:	0e 94 00 00 	call	0	; 0x0 <LCD_vidSendCommand>
}
 14a:	60 96       	adiw	r28, 0x10	; 16
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
 156:	cf 91       	pop	r28
 158:	df 91       	pop	r29
 15a:	08 95       	ret

Disassembly of section .text.LCD_vidWriteString:

00000000 <LCD_vidWriteString>:




void LCD_vidWriteData(u8 DataCpy)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	00 d0       	rcall	.+0      	; 0x6 <LCD_vidWriteString+0x6>
   6:	cd b7       	in	r28, 0x3d	; 61
   8:	de b7       	in	r29, 0x3e	; 62
   a:	9a 83       	std	Y+2, r25	; 0x02
   c:	89 83       	std	Y+1, r24	; 0x01
   e:	0f 90       	pop	r0
  10:	0f 90       	pop	r0
  12:	cf 91       	pop	r28
  14:	df 91       	pop	r29
  16:	08 95       	ret

Disassembly of section .text.LCD_vidInit:

00000000 <LCD_vidInit>:
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	e8 97       	sbiw	r28, 0x38	; 56
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	83 e0       	ldi	r24, 0x03	; 3
  16:	90 e0       	ldi	r25, 0x00	; 0
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_0,DIOHIGH);
  18:	60 e0       	ldi	r22, 0x00	; 0
  1a:	70 e0       	ldi	r23, 0x00	; 0
  1c:	41 e0       	ldi	r20, 0x01	; 1
  1e:	50 e0       	ldi	r21, 0x00	; 0
  20:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  24:	83 e0       	ldi	r24, 0x03	; 3
  26:	90 e0       	ldi	r25, 0x00	; 0
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_1,DIOLOW);
  28:	61 e0       	ldi	r22, 0x01	; 1
  2a:	70 e0       	ldi	r23, 0x00	; 0
  2c:	41 e0       	ldi	r20, 0x01	; 1
  2e:	50 e0       	ldi	r21, 0x00	; 0
  30:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  34:	83 e0       	ldi	r24, 0x03	; 3
  36:	90 e0       	ldi	r25, 0x00	; 0
	DIO_vidSetPortValue(PORTD,DataCpy);
  38:	62 e0       	ldi	r22, 0x02	; 2
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	41 e0       	ldi	r20, 0x01	; 1
  3e:	50 e0       	ldi	r21, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  44:	84 e0       	ldi	r24, 0x04	; 4
	DIO_vidSetPinVal(PORTC,DIO_u8PIN_2,DIOHIGH);
  46:	90 e0       	ldi	r25, 0x00	; 0
  48:	6f ef       	ldi	r22, 0xFF	; 255
  4a:	70 e0       	ldi	r23, 0x00	; 0
  4c:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	90 e0       	ldi	r25, 0x00	; 0
  54:	a0 e2       	ldi	r26, 0x20	; 32
  56:	b2 e4       	ldi	r27, 0x42	; 66
  58:	8d ab       	std	Y+53, r24	; 0x35
  5a:	9e ab       	std	Y+54, r25	; 0x36
  5c:	af ab       	std	Y+55, r26	; 0x37
  5e:	b8 af       	std	Y+56, r27	; 0x38
  60:	6d a9       	ldd	r22, Y+53	; 0x35
  62:	7e a9       	ldd	r23, Y+54	; 0x36
  64:	8f a9       	ldd	r24, Y+55	; 0x37
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  66:	98 ad       	ldd	r25, Y+56	; 0x38
  68:	20 e0       	ldi	r18, 0x00	; 0
  6a:	30 e0       	ldi	r19, 0x00	; 0
  6c:	4a ef       	ldi	r20, 0xFA	; 250
  6e:	54 e4       	ldi	r21, 0x44	; 68
  70:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  74:	dc 01       	movw	r26, r24
  76:	cb 01       	movw	r24, r22
  78:	89 ab       	std	Y+49, r24	; 0x31
  7a:	9a ab       	std	Y+50, r25	; 0x32
  7c:	ab ab       	std	Y+51, r26	; 0x33
  7e:	bc ab       	std	Y+52, r27	; 0x34
  80:	69 a9       	ldd	r22, Y+49	; 0x31
  82:	7a a9       	ldd	r23, Y+50	; 0x32
  84:	8b a9       	ldd	r24, Y+51	; 0x33
	if (__tmp < 1.0)
  86:	9c a9       	ldd	r25, Y+52	; 0x34
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	40 e8       	ldi	r20, 0x80	; 128
  8e:	5f e3       	ldi	r21, 0x3F	; 63
  90:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  94:	88 23       	and	r24, r24
  96:	04 f4       	brge	.+0      	; 0x98 <LCD_vidInit+0x98>
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	98 ab       	std	Y+48, r25	; 0x30
		__ticks = 1;
  9e:	8f a7       	std	Y+47, r24	; 0x2f
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <LCD_vidInit+0xa2>
  a2:	69 a9       	ldd	r22, Y+49	; 0x31
  a4:	7a a9       	ldd	r23, Y+50	; 0x32
  a6:	8b a9       	ldd	r24, Y+51	; 0x33
	else if (__tmp > 65535)
  a8:	9c a9       	ldd	r25, Y+52	; 0x34
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	3f ef       	ldi	r19, 0xFF	; 255
  ae:	4f e7       	ldi	r20, 0x7F	; 127
  b0:	57 e4       	ldi	r21, 0x47	; 71
  b2:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  b6:	18 16       	cp	r1, r24
  b8:	04 f4       	brge	.+0      	; 0xba <LCD_vidInit+0xba>
  ba:	6d a9       	ldd	r22, Y+53	; 0x35
  bc:	7e a9       	ldd	r23, Y+54	; 0x36
  be:	8f a9       	ldd	r24, Y+55	; 0x37
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  c0:	98 ad       	ldd	r25, Y+56	; 0x38
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	40 e2       	ldi	r20, 0x20	; 32
  c8:	51 e4       	ldi	r21, 0x41	; 65
  ca:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  ce:	dc 01       	movw	r26, r24
  d0:	cb 01       	movw	r24, r22
  d2:	bc 01       	movw	r22, r24
  d4:	cd 01       	movw	r24, r26
  d6:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
  da:	dc 01       	movw	r26, r24
  dc:	cb 01       	movw	r24, r22
  de:	98 ab       	std	Y+48, r25	; 0x30
  e0:	8f a7       	std	Y+47, r24	; 0x2f
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_vidInit+0xe4>
  e4:	88 ec       	ldi	r24, 0xC8	; 200
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	9e a7       	std	Y+46, r25	; 0x2e
  ea:	8d a7       	std	Y+45, r24	; 0x2d
  ec:	8d a5       	ldd	r24, Y+45	; 0x2d
  ee:	9e a5       	ldd	r25, Y+46	; 0x2e
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	01 f4       	brne	.+0      	; 0xf4 <LCD_vidInit+0xf4>
  f4:	9e a7       	std	Y+46, r25	; 0x2e
  f6:	8d a7       	std	Y+45, r24	; 0x2d
  f8:	8f a5       	ldd	r24, Y+47	; 0x2f
  fa:	98 a9       	ldd	r25, Y+48	; 0x30
  fc:	01 97       	sbiw	r24, 0x01	; 1
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fe:	98 ab       	std	Y+48, r25	; 0x30
 100:	8f a7       	std	Y+47, r24	; 0x2f
 102:	8f a5       	ldd	r24, Y+47	; 0x2f
 104:	98 a9       	ldd	r25, Y+48	; 0x30
 106:	00 97       	sbiw	r24, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 108:	01 f4       	brne	.+0      	; 0x10a <LCD_vidInit+0x10a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_vidInit+0x10c>
 10c:	69 a9       	ldd	r22, Y+49	; 0x31
 10e:	7a a9       	ldd	r23, Y+50	; 0x32
 110:	8b a9       	ldd	r24, Y+51	; 0x33
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 112:	9c a9       	ldd	r25, Y+52	; 0x34
 114:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 118:	dc 01       	movw	r26, r24
 11a:	cb 01       	movw	r24, r22
 11c:	98 ab       	std	Y+48, r25	; 0x30
 11e:	8f a7       	std	Y+47, r24	; 0x2f
 120:	8f a5       	ldd	r24, Y+47	; 0x2f
 122:	98 a9       	ldd	r25, Y+48	; 0x30
 124:	9c a7       	std	Y+44, r25	; 0x2c
 126:	8b a7       	std	Y+43, r24	; 0x2b
 128:	8b a5       	ldd	r24, Y+43	; 0x2b
 12a:	9c a5       	ldd	r25, Y+44	; 0x2c
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	01 f4       	brne	.+0      	; 0x130 <LCD_vidInit+0x130>
 130:	9c a7       	std	Y+44, r25	; 0x2c
 132:	8b a7       	std	Y+43, r24	; 0x2b
 134:	88 e3       	ldi	r24, 0x38	; 56
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
	_delay_ms(1.53);
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_2,DIOLOW);
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	a0 e8       	ldi	r26, 0x80	; 128
 142:	bf e3       	ldi	r27, 0x3F	; 63
 144:	8f a3       	std	Y+39, r24	; 0x27
 146:	98 a7       	std	Y+40, r25	; 0x28
 148:	a9 a7       	std	Y+41, r26	; 0x29
}
 14a:	ba a7       	std	Y+42, r27	; 0x2a
 14c:	6f a1       	ldd	r22, Y+39	; 0x27
 14e:	78 a5       	ldd	r23, Y+40	; 0x28
 150:	89 a5       	ldd	r24, Y+41	; 0x29
 152:	9a a5       	ldd	r25, Y+42	; 0x2a
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	4a ef       	ldi	r20, 0xFA	; 250
 15a:	54 e4       	ldi	r21, 0x44	; 68
 15c:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 160:	dc 01       	movw	r26, r24
 162:	cb 01       	movw	r24, r22
 164:	8b a3       	std	Y+35, r24	; 0x23
 166:	9c a3       	std	Y+36, r25	; 0x24
 168:	ad a3       	std	Y+37, r26	; 0x25
 16a:	be a3       	std	Y+38, r27	; 0x26
 16c:	6b a1       	ldd	r22, Y+35	; 0x23
 16e:	7c a1       	ldd	r23, Y+36	; 0x24
 170:	8d a1       	ldd	r24, Y+37	; 0x25
 172:	9e a1       	ldd	r25, Y+38	; 0x26
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e8       	ldi	r20, 0x80	; 128
 17a:	5f e3       	ldi	r21, 0x3F	; 63
 17c:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 180:	88 23       	and	r24, r24
 182:	04 f4       	brge	.+0      	; 0x184 <LCD_vidInit+0x184>
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	9a a3       	std	Y+34, r25	; 0x22
 18a:	89 a3       	std	Y+33, r24	; 0x21
 18c:	00 c0       	rjmp	.+0      	; 0x18e <LCD_vidInit+0x18e>
 18e:	6b a1       	ldd	r22, Y+35	; 0x23
 190:	7c a1       	ldd	r23, Y+36	; 0x24
 192:	8d a1       	ldd	r24, Y+37	; 0x25
 194:	9e a1       	ldd	r25, Y+38	; 0x26
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	3f ef       	ldi	r19, 0xFF	; 255
 19a:	4f e7       	ldi	r20, 0x7F	; 127
 19c:	57 e4       	ldi	r21, 0x47	; 71
 19e:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 1a2:	18 16       	cp	r1, r24
 1a4:	04 f4       	brge	.+0      	; 0x1a6 <LCD_vidInit+0x1a6>
 1a6:	6f a1       	ldd	r22, Y+39	; 0x27
 1a8:	78 a5       	ldd	r23, Y+40	; 0x28
 1aa:	89 a5       	ldd	r24, Y+41	; 0x29
 1ac:	9a a5       	ldd	r25, Y+42	; 0x2a
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e2       	ldi	r20, 0x20	; 32
 1b4:	51 e4       	ldi	r21, 0x41	; 65
 1b6:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 1ba:	dc 01       	movw	r26, r24
 1bc:	cb 01       	movw	r24, r22
 1be:	bc 01       	movw	r22, r24
 1c0:	cd 01       	movw	r24, r26
 1c2:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 1c6:	dc 01       	movw	r26, r24
 1c8:	cb 01       	movw	r24, r22
 1ca:	9a a3       	std	Y+34, r25	; 0x22
 1cc:	89 a3       	std	Y+33, r24	; 0x21
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_vidInit+0x1d0>
 1d0:	88 ec       	ldi	r24, 0xC8	; 200
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	98 a3       	std	Y+32, r25	; 0x20
 1d6:	8f 8f       	std	Y+31, r24	; 0x1f
 1d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
 1da:	98 a1       	ldd	r25, Y+32	; 0x20
 1dc:	01 97       	sbiw	r24, 0x01	; 1
 1de:	01 f4       	brne	.+0      	; 0x1e0 <LCD_vidInit+0x1e0>
 1e0:	98 a3       	std	Y+32, r25	; 0x20
 1e2:	8f 8f       	std	Y+31, r24	; 0x1f
 1e4:	89 a1       	ldd	r24, Y+33	; 0x21
 1e6:	9a a1       	ldd	r25, Y+34	; 0x22
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	9a a3       	std	Y+34, r25	; 0x22
 1ec:	89 a3       	std	Y+33, r24	; 0x21
 1ee:	89 a1       	ldd	r24, Y+33	; 0x21
 1f0:	9a a1       	ldd	r25, Y+34	; 0x22
 1f2:	00 97       	sbiw	r24, 0x00	; 0
 1f4:	01 f4       	brne	.+0      	; 0x1f6 <LCD_vidInit+0x1f6>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_vidInit+0x1f8>
 1f8:	6b a1       	ldd	r22, Y+35	; 0x23
 1fa:	7c a1       	ldd	r23, Y+36	; 0x24
 1fc:	8d a1       	ldd	r24, Y+37	; 0x25
 1fe:	9e a1       	ldd	r25, Y+38	; 0x26
 200:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 204:	dc 01       	movw	r26, r24
 206:	cb 01       	movw	r24, r22
 208:	9a a3       	std	Y+34, r25	; 0x22
 20a:	89 a3       	std	Y+33, r24	; 0x21
 20c:	89 a1       	ldd	r24, Y+33	; 0x21
 20e:	9a a1       	ldd	r25, Y+34	; 0x22
 210:	9e 8f       	std	Y+30, r25	; 0x1e
 212:	8d 8f       	std	Y+29, r24	; 0x1d
 214:	8d 8d       	ldd	r24, Y+29	; 0x1d
 216:	9e 8d       	ldd	r25, Y+30	; 0x1e
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	01 f4       	brne	.+0      	; 0x21c <LCD_vidInit+0x21c>
 21c:	9e 8f       	std	Y+30, r25	; 0x1e
 21e:	8d 8f       	std	Y+29, r24	; 0x1d
 220:	8f e0       	ldi	r24, 0x0F	; 15
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	a0 e8       	ldi	r26, 0x80	; 128
 22e:	bf e3       	ldi	r27, 0x3F	; 63
 230:	89 8f       	std	Y+25, r24	; 0x19
 232:	9a 8f       	std	Y+26, r25	; 0x1a
 234:	ab 8f       	std	Y+27, r26	; 0x1b
 236:	bc 8f       	std	Y+28, r27	; 0x1c
 238:	69 8d       	ldd	r22, Y+25	; 0x19
 23a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 23c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 23e:	9c 8d       	ldd	r25, Y+28	; 0x1c
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	4a ef       	ldi	r20, 0xFA	; 250
 246:	54 e4       	ldi	r21, 0x44	; 68
 248:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 24c:	dc 01       	movw	r26, r24
 24e:	cb 01       	movw	r24, r22
 250:	8d 8b       	std	Y+21, r24	; 0x15
 252:	9e 8b       	std	Y+22, r25	; 0x16
 254:	af 8b       	std	Y+23, r26	; 0x17
 256:	b8 8f       	std	Y+24, r27	; 0x18
 258:	6d 89       	ldd	r22, Y+21	; 0x15
 25a:	7e 89       	ldd	r23, Y+22	; 0x16
 25c:	8f 89       	ldd	r24, Y+23	; 0x17
 25e:	98 8d       	ldd	r25, Y+24	; 0x18
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	40 e8       	ldi	r20, 0x80	; 128
 266:	5f e3       	ldi	r21, 0x3F	; 63
 268:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 26c:	88 23       	and	r24, r24
 26e:	04 f4       	brge	.+0      	; 0x270 <LCD_vidInit+0x270>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	9c 8b       	std	Y+20, r25	; 0x14
 276:	8b 8b       	std	Y+19, r24	; 0x13
 278:	00 c0       	rjmp	.+0      	; 0x27a <LCD_vidInit+0x27a>
 27a:	6d 89       	ldd	r22, Y+21	; 0x15
 27c:	7e 89       	ldd	r23, Y+22	; 0x16
 27e:	8f 89       	ldd	r24, Y+23	; 0x17
 280:	98 8d       	ldd	r25, Y+24	; 0x18
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	3f ef       	ldi	r19, 0xFF	; 255
 286:	4f e7       	ldi	r20, 0x7F	; 127
 288:	57 e4       	ldi	r21, 0x47	; 71
 28a:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 28e:	18 16       	cp	r1, r24
 290:	04 f4       	brge	.+0      	; 0x292 <LCD_vidInit+0x292>
 292:	69 8d       	ldd	r22, Y+25	; 0x19
 294:	7a 8d       	ldd	r23, Y+26	; 0x1a
 296:	8b 8d       	ldd	r24, Y+27	; 0x1b
 298:	9c 8d       	ldd	r25, Y+28	; 0x1c
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	40 e2       	ldi	r20, 0x20	; 32
 2a0:	51 e4       	ldi	r21, 0x41	; 65
 2a2:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 2a6:	dc 01       	movw	r26, r24
 2a8:	cb 01       	movw	r24, r22
 2aa:	bc 01       	movw	r22, r24
 2ac:	cd 01       	movw	r24, r26
 2ae:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 2b2:	dc 01       	movw	r26, r24
 2b4:	cb 01       	movw	r24, r22
 2b6:	9c 8b       	std	Y+20, r25	; 0x14
 2b8:	8b 8b       	std	Y+19, r24	; 0x13
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_vidInit+0x2bc>
 2bc:	88 ec       	ldi	r24, 0xC8	; 200
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	9a 8b       	std	Y+18, r25	; 0x12
 2c2:	89 8b       	std	Y+17, r24	; 0x11
 2c4:	89 89       	ldd	r24, Y+17	; 0x11
 2c6:	9a 89       	ldd	r25, Y+18	; 0x12
 2c8:	01 97       	sbiw	r24, 0x01	; 1
 2ca:	01 f4       	brne	.+0      	; 0x2cc <LCD_vidInit+0x2cc>
 2cc:	9a 8b       	std	Y+18, r25	; 0x12
 2ce:	89 8b       	std	Y+17, r24	; 0x11
 2d0:	8b 89       	ldd	r24, Y+19	; 0x13
 2d2:	9c 89       	ldd	r25, Y+20	; 0x14
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	9c 8b       	std	Y+20, r25	; 0x14
 2d8:	8b 8b       	std	Y+19, r24	; 0x13
 2da:	8b 89       	ldd	r24, Y+19	; 0x13
 2dc:	9c 89       	ldd	r25, Y+20	; 0x14
 2de:	00 97       	sbiw	r24, 0x00	; 0
 2e0:	01 f4       	brne	.+0      	; 0x2e2 <LCD_vidInit+0x2e2>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <LCD_vidInit+0x2e4>
 2e4:	6d 89       	ldd	r22, Y+21	; 0x15
 2e6:	7e 89       	ldd	r23, Y+22	; 0x16
 2e8:	8f 89       	ldd	r24, Y+23	; 0x17
 2ea:	98 8d       	ldd	r25, Y+24	; 0x18
 2ec:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 2f0:	dc 01       	movw	r26, r24
 2f2:	cb 01       	movw	r24, r22
 2f4:	9c 8b       	std	Y+20, r25	; 0x14
 2f6:	8b 8b       	std	Y+19, r24	; 0x13
 2f8:	8b 89       	ldd	r24, Y+19	; 0x13
 2fa:	9c 89       	ldd	r25, Y+20	; 0x14
 2fc:	98 8b       	std	Y+16, r25	; 0x10
 2fe:	8f 87       	std	Y+15, r24	; 0x0f
 300:	8f 85       	ldd	r24, Y+15	; 0x0f
 302:	98 89       	ldd	r25, Y+16	; 0x10
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	01 f4       	brne	.+0      	; 0x308 <LCD_vidInit+0x308>
 308:	98 8b       	std	Y+16, r25	; 0x10
 30a:	8f 87       	std	Y+15, r24	; 0x0f
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	a0 e0       	ldi	r26, 0x00	; 0
 31a:	b0 e4       	ldi	r27, 0x40	; 64
 31c:	8b 87       	std	Y+11, r24	; 0x0b
 31e:	9c 87       	std	Y+12, r25	; 0x0c
 320:	ad 87       	std	Y+13, r26	; 0x0d
 322:	be 87       	std	Y+14, r27	; 0x0e
 324:	6b 85       	ldd	r22, Y+11	; 0x0b
 326:	7c 85       	ldd	r23, Y+12	; 0x0c
 328:	8d 85       	ldd	r24, Y+13	; 0x0d
 32a:	9e 85       	ldd	r25, Y+14	; 0x0e
 32c:	20 e0       	ldi	r18, 0x00	; 0
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	4a ef       	ldi	r20, 0xFA	; 250
 332:	54 e4       	ldi	r21, 0x44	; 68
 334:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 338:	dc 01       	movw	r26, r24
 33a:	cb 01       	movw	r24, r22
 33c:	8f 83       	std	Y+7, r24	; 0x07
 33e:	98 87       	std	Y+8, r25	; 0x08
 340:	a9 87       	std	Y+9, r26	; 0x09
 342:	ba 87       	std	Y+10, r27	; 0x0a
 344:	6f 81       	ldd	r22, Y+7	; 0x07
 346:	78 85       	ldd	r23, Y+8	; 0x08
 348:	89 85       	ldd	r24, Y+9	; 0x09
 34a:	9a 85       	ldd	r25, Y+10	; 0x0a
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	40 e8       	ldi	r20, 0x80	; 128
 352:	5f e3       	ldi	r21, 0x3F	; 63
 354:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 358:	88 23       	and	r24, r24
 35a:	04 f4       	brge	.+0      	; 0x35c <LCD_vidInit+0x35c>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	9e 83       	std	Y+6, r25	; 0x06
 362:	8d 83       	std	Y+5, r24	; 0x05
 364:	00 c0       	rjmp	.+0      	; 0x366 <LCD_vidInit+0x366>
 366:	6f 81       	ldd	r22, Y+7	; 0x07
 368:	78 85       	ldd	r23, Y+8	; 0x08
 36a:	89 85       	ldd	r24, Y+9	; 0x09
 36c:	9a 85       	ldd	r25, Y+10	; 0x0a
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	3f ef       	ldi	r19, 0xFF	; 255
 372:	4f e7       	ldi	r20, 0x7F	; 127
 374:	57 e4       	ldi	r21, 0x47	; 71
 376:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 37a:	18 16       	cp	r1, r24
 37c:	04 f4       	brge	.+0      	; 0x37e <LCD_vidInit+0x37e>
 37e:	6b 85       	ldd	r22, Y+11	; 0x0b
 380:	7c 85       	ldd	r23, Y+12	; 0x0c
 382:	8d 85       	ldd	r24, Y+13	; 0x0d
 384:	9e 85       	ldd	r25, Y+14	; 0x0e
 386:	20 e0       	ldi	r18, 0x00	; 0
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	40 e2       	ldi	r20, 0x20	; 32
 38c:	51 e4       	ldi	r21, 0x41	; 65
 38e:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 392:	dc 01       	movw	r26, r24
 394:	cb 01       	movw	r24, r22
 396:	bc 01       	movw	r22, r24
 398:	cd 01       	movw	r24, r26
 39a:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 39e:	dc 01       	movw	r26, r24
 3a0:	cb 01       	movw	r24, r22
 3a2:	9e 83       	std	Y+6, r25	; 0x06
 3a4:	8d 83       	std	Y+5, r24	; 0x05
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <LCD_vidInit+0x3a8>
 3a8:	88 ec       	ldi	r24, 0xC8	; 200
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	9c 83       	std	Y+4, r25	; 0x04
 3ae:	8b 83       	std	Y+3, r24	; 0x03
 3b0:	8b 81       	ldd	r24, Y+3	; 0x03
 3b2:	9c 81       	ldd	r25, Y+4	; 0x04
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	01 f4       	brne	.+0      	; 0x3b8 <LCD_vidInit+0x3b8>
 3b8:	9c 83       	std	Y+4, r25	; 0x04
 3ba:	8b 83       	std	Y+3, r24	; 0x03
 3bc:	8d 81       	ldd	r24, Y+5	; 0x05
 3be:	9e 81       	ldd	r25, Y+6	; 0x06
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	9e 83       	std	Y+6, r25	; 0x06
 3c4:	8d 83       	std	Y+5, r24	; 0x05
 3c6:	8d 81       	ldd	r24, Y+5	; 0x05
 3c8:	9e 81       	ldd	r25, Y+6	; 0x06
 3ca:	00 97       	sbiw	r24, 0x00	; 0
 3cc:	01 f4       	brne	.+0      	; 0x3ce <LCD_vidInit+0x3ce>
 3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <LCD_vidInit+0x3d0>
 3d0:	6f 81       	ldd	r22, Y+7	; 0x07
 3d2:	78 85       	ldd	r23, Y+8	; 0x08
 3d4:	89 85       	ldd	r24, Y+9	; 0x09
 3d6:	9a 85       	ldd	r25, Y+10	; 0x0a
 3d8:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 3dc:	dc 01       	movw	r26, r24
 3de:	cb 01       	movw	r24, r22
 3e0:	9e 83       	std	Y+6, r25	; 0x06
 3e2:	8d 83       	std	Y+5, r24	; 0x05
 3e4:	8d 81       	ldd	r24, Y+5	; 0x05
 3e6:	9e 81       	ldd	r25, Y+6	; 0x06
 3e8:	9a 83       	std	Y+2, r25	; 0x02
 3ea:	89 83       	std	Y+1, r24	; 0x01
 3ec:	89 81       	ldd	r24, Y+1	; 0x01
 3ee:	9a 81       	ldd	r25, Y+2	; 0x02
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	01 f4       	brne	.+0      	; 0x3f4 <LCD_vidInit+0x3f4>
 3f4:	9a 83       	std	Y+2, r25	; 0x02
 3f6:	89 83       	std	Y+1, r24	; 0x01
 3f8:	86 e0       	ldi	r24, 0x06	; 6
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 00 00 	call	0	; 0x0 <LCD_vidInit>
 400:	e8 96       	adiw	r28, 0x38	; 56
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	f8 94       	cli
 406:	de bf       	out	0x3e, r29	; 62
 408:	0f be       	out	0x3f, r0	; 63
 40a:	cd bf       	out	0x3d, r28	; 61
 40c:	cf 91       	pop	r28
 40e:	df 91       	pop	r29
 410:	08 95       	ret

Disassembly of section .text.LCD_vidGoTo:

00000000 <LCD_vidGoTo>:




void LCD_vidWriteData(u8 DataCpy)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	00 d0       	rcall	.+0      	; 0x6 <LCD_vidGoTo+0x6>
   6:	00 d0       	rcall	.+0      	; 0x8 <LCD_vidGoTo+0x8>
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	9a 83       	std	Y+2, r25	; 0x02
   e:	89 83       	std	Y+1, r24	; 0x01
  10:	7c 83       	std	Y+4, r23	; 0x04
  12:	6b 83       	std	Y+3, r22	; 0x03
  14:	0f 90       	pop	r0
  16:	0f 90       	pop	r0
	DIO_vidSetPinValue(PORTC,DIO_u8PIN_0,DIOHIGH);
  18:	0f 90       	pop	r0
  1a:	0f 90       	pop	r0
  1c:	cf 91       	pop	r28
  1e:	df 91       	pop	r29
  20:	08 95       	ret
